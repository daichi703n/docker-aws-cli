---
resource_types:
- name: slack-alert
  type: docker-image
  source:
    repository: arbourd/concourse-slack-alert-resource
    tag: latest
- name: pypi
  type: docker-image
  source:
    repository: cfplatformeng/concourse-pypi-resource

resources:
- name: notify
  type: slack-alert
  icon: slack
  source:
    url: ((slack_webhook))
    # channel: ((slack_channel))
- name: repo
  type: git
  icon: github-circle
  source:
    uri: git@github.com:daichi703n/docker-((docker_image_name)).git
    # branch: develop #uncomment on developping
    private_key: ((github_private_key))
# - name: docker-awscli-image
#   type: docker-image
#   icon: docker
#   source:
#     repository: daichi703n/awscli
#     username: ((docker_username))
#     password: ((docker_password))
#     tag: develop
- name: pypi-awscli-resource
  type: pypi
  icon: language-python
  source:
    name: awscli
    packaging: any

- name: docker-alpine-image
  type: docker-image
  icon: docker
  check_every: 30m
  source:
    repository: alpine
    username: ((docker_username))
    password: ((docker_password))
    tag: latest

jobs:
- name: create-docker-image
  serial: true
  build_logs_to_retain: 30
  plan:
  - in_parallel:
    - get: repo
      trigger: false
    - get: docker-alpine-image
      trigger: true
    - get: pypi-awscli-resource
      trigger: true
  - task: build-docker-image
    timeout: 1h
    params: &params
      AWS_DEFAULT_REGION: ((aws_default_region))
      AWS_ACCESS_KEY_ID: ((aws_access_key_id))
      AWS_SECRET_ACCESS_KEY: ((aws_secret_access_key))
      DOCKER_IMAGE_NAME: ((docker_image_name))
      DOCKER_USERNAME: ((docker_username))
      DOCKER_PASSWORD: ((docker_password))
    privileged: true
    # file: repo/ci/tasks/docker-build.yml
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: docker
          tag: dind
      inputs:
      - name: repo
      - name: pypi-awscli-resource
      outputs: 
      - name: repo
      - name: docker-images
      run: 
        path: /bin/sh
        args: 
        - -c
        - |
          export AWSCLI_VERSION=$(cat pypi-awscli-resource/version)
          cd repo/ci/tasks
          source ./docker-lib.sh
          start_docker
          ./docker-build.sh
          docker save daichi703n/awscli > ../../../docker-images/awscli.tar
    on_failure:
      put: notify
      params:
        alert_type: failed
  - task: push-develop-image #TODO: migrate to use docker-image resource for push?
    timeout: 1h
    params:
      <<: *params
      DOCKER_TAG: develop
    privileged: true
    # file: repo/ci/tasks/docker-push.yml
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: docker
          tag: dind
      inputs:
      - name: repo
      - name: docker-images
      run: 
        path: /bin/sh
        args: 
        - -c
        - |
          cd repo/ci/tasks
          source ./docker-lib.sh
          start_docker
          docker load < ../../../docker-images/awscli.tar
          ./docker-push.sh
    on_failure:
      put: notify
      params:
        alert_type: failed

- name: test-docker-image
  serial: true
  build_logs_to_retain: 30
  plan:
  - in_parallel:
    - get: repo
      trigger: true
      passed:
      - create-docker-image
  - task: test-docker-image
    timeout: 1h
    params: *params
    privileged: true
    # file: repo/ci/tasks/docker-test.yml
    # image: docker-awscli-image
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: daichi703n/awscli
          tag: develop
      inputs:
      - name: repo
      run: 
        path: /bin/sh
        args: 
        - -c
        - | 
          cd repo/ci/tasks
          echo "alpine-release: $(cat /etc/alpine-release)"
          ./docker-test.sh
    on_failure:
      put: notify
      params:
        alert_type: failed

- name: push-docker-image
  serial: true
  build_logs_to_retain: 30
  plan:
  - in_parallel:
    - get: repo
      trigger: true
      passed:
      - test-docker-image

  - task: push-docker-image
    timeout: 1h
    params: *params
    privileged: true
    # file: repo/ci/tasks/docker-push.yml
    # image: docker-awscli-image
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: docker
          tag: dind
      inputs:
      - name: repo
      outputs: 
      - name: repo
      run: 
        path: /bin/sh
        args: 
        - -c
        - |
          cd repo/ci/tasks
          source ./docker-lib.sh
          start_docker
          docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}
          set -eu pipefail
          docker pull daichi703n/${DOCKER_IMAGE_NAME}:develop
          docker tag daichi703n/${DOCKER_IMAGE_NAME}:develop daichi703n/${DOCKER_IMAGE_NAME}:latest
          docker run -it daichi703n/${DOCKER_IMAGE_NAME}:develop aws --version > ../../versions/awscli-release
          AWSCLI_MINOR_VERSION=$(cat ../../versions/awscli-release | grep aws-cli | awk -F'[/. ]' '{print $2"."$3}')
          AWSCLI_PATCH_VERSION=$(cat ../../versions/awscli-release | grep aws-cli | awk -F'[/. ]' '{print $2"."$3"."$4}')
          ALPINE_PATCH_VERSION=$(cat /etc/alpine-release)
          # cat /tmp/aws-version > ../../versions/awscli-release
          # echo -n $AWSCLI_PATCH_VERSION > ../../versions/awscli-release
          echo -n $ALPINE_PATCH_VERSION > ../../versions/alpine-release
          export DOCKER_TAG=${AWSCLI_PATCH_VERSION}-alpine${ALPINE_PATCH_VERSION}
          ./docker-push.sh
          export DOCKER_TAG=${AWSCLI_PATCH_VERSION}
          ./docker-push.sh
          export DOCKER_TAG=${AWSCLI_MINOR_VERSION}
          ./docker-push.sh
    on_failure:
      put: notify
      params:
        alert_type: failed

  - task: git-commit-versions
    timeout: 1h
    params:
      <<: *params
      GITHUB_PRIVATE_KEY: ((github_private_key))
    # file: repo/ci/tasks/docker-push.yml
    # image: docker-awscli-image
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: alpine/git
          tag: latest
      inputs:
      - name: repo
      outputs: 
      - name: repo
      run: 
        path: /bin/sh
        args: 
        - -c
        - |
          cd repo
          AWSCLI_MINOR_VERSION=$(cat versions/awscli-release | grep aws-cli | awk -F'[/. ]' '{print $2"."$3}')
          AWSCLI_PATCH_VERSION=$(cat versions/awscli-release | grep aws-cli | awk -F'[/. ]' '{print $2"."$3"."$4}')
          ALPINE_PATCH_VERSION=$(cat versions/alpine-release)
          git config --global user.email "${DOCKER_USERNAME}+bot@gmail.com"
          git config --global user.name "${DOCKER_USERNAME} CI Bot"
          git stash
          git checkout -b version/${AWSCLI_PATCH_VERSION}-alpine${ALPINE_PATCH_VERSION}
          git stash pop
          git status -u
          git --no-pager diff
          git add -A
          git commit -m "Release ${AWSCLI_PATCH_VERSION}-alpine${ALPINE_PATCH_VERSION}"
          git tag -a ${AWSCLI_PATCH_VERSION}-alpine${ALPINE_PATCH_VERSION} -m ""
          # if [ #Diff ver ]; then #TODO: check latest release
          #switch to develop on developping
          # git checkout develop
          git checkout master
          git merge version/${AWSCLI_PATCH_VERSION}-alpine${ALPINE_PATCH_VERSION}
          # fi
          echo "${GITHUB_PRIVATE_KEY}" > id_rsa
          chmod 600 id_rsa
          cat id_rsa
          GIT_SSH_COMMAND='ssh -i id_rsa -o StrictHostKeyChecking=no' git push --all --follow-tags
    on_failure:
      put: notify
      params:
        alert_type: failed
  - put: notify
    params:
      alert_type: success
